new_date <- format(women$Date)
# character vector 'city' with name of city
city = sapply(women$Place, remove_brackets)
# vector 'gender'
gender <- c(rep("female", nrow(women)))
# data frame 'womens'
date <- new_date
womens <- data.frame(height, athlete, gender, country, city, date
, day, month, year, stringsAsFactors = FALSE)
head(womens)
# number of records per decade (1920-1929, 1930-1939, 1940-1949, etc)
# object: per_decade
per_decade <- records %>%
group_by(gr=cut(year, breaks = seq(1900, 2000, by=10))) %>%
count()
# invoke head() on per_decade
head(per_decade)
womens
# vector 'height' with numeric values of height in meters
height <- sapply(men$Height, get_height)
# vector 'athlete' with character values of athlete's name
athlete <- sapply(men$Athlete, get_athlete)
# character vector 'country' with country abbreviations
country <- sapply(men$Athlete, get_country)
# character vector 'city' with name of city
city <- sapply(men$Venue, get_city_mens)
# vector 'clean_date'
clean_date <- sapply(men$Date, remove_brackets)
# vector 'clean_date'
clean_date <- sapply(men$Date, remove_brackets)
# numeric vector 'day'
day <- sapply(clean_date, get_day)
# character vector 'month'
month <- sapply(clean_date, get_month)
# numeric vector 'year'
year <- sapply(clean_date, get_year)
# 'new_date' vector of class "Date"
new_date <- clean_date <- format(clean_date)
# vector 'gender'
gender <- c(rep("male", nrow(men)))
# data frame 'mens'
date <- new_date
mens <- data.frame(height, athlete, gender, country, city, date
, day, month, year, stringsAsFactors = FALSE)
# new data frame 'records'
records <- data.frame(rbind(womens, mens), stringsAsFactors = FALSE)
records$gender <- factor(records$gender)
records$country <- factor(records$country)
str(records)
# number of records per country
# object: per_country
per_country <- records %>%
group_by(country) %>%
count()
# invoke head() on per_country
head(per_country)
# number of records per country in descending order
# object: per_country_desc
per_country_desc <- per_country %>%
arrange(desc(n))
# invoke head() on per_country_desc
head(per_country_desc)
# number of records per year in descending order
# object: per_year_desc
per_year_desc <- records %>%
group_by(year) %>%
count() %>%
arrange(desc(n))
# invoke head() on per_year_desc
head(per_year_desc)
# number of records by gender
# object: by_gender
by_gender <- records %>%
group_by(gender) %>%
count()
# invoke head() on by_gender
head(by_gender)
# number of records per decade (1920-1929, 1930-1939, 1940-1949, etc)
# object: per_decade
per_decade <- records %>%
group_by(gr=cut(year, breaks = seq(1900, 2000, by=10))) %>%
count()
# invoke head() on per_decade
head(per_decade)
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step + facet_grid(~gender)
# step-line plot, with points, showing the progression of women records
# (points colored by country)
women_by_country <- ggplot() +
geom_step(data=subset(records, (gender=="female")),
mapping=aes(x=year, y=height)) +
geom_point(data=subset(records, (gender=="female")),
mapping=aes(x=year, y=height, colour=country)) +
ggtitle("Women's High Jump World Record Progression")
women_by_country
# step-line plot, with points, showing the progression of men records
# (points colored by country)
men_by_country <- ggplot() +
geom_step(data=subset(records, (gender=="male")),
mapping=aes(x=year, y=height)) +
geom_point(data=subset(records, (gender=="male")),
mapping=aes(x=year, y=height, colour=country)) +
ggtitle("Men's High Jump World Record Progression")
men_by_country
# Model for women
# regression of 'height' on 'year'
womens_records <- records[records$gender == "female"]
fit_women <- lm(height ~ year, data=womens_records)
# Model for women
# regression of 'height' on 'year'
womens_records <- records[records$gender == "female", ]
fit_women <- lm(height ~ year, data=womens_records)
fit_women
# predictions for olympic years
new <- data.frame(year = seq(2000, 2016, 4))
predicted <- predict(fit_women, newdata=new)
pander(data.frame(new, predicted))
# Model for men
# regression of 'height' on 'year'
mens_records <- records[records$gender == "male", ]
fit_men <- lm(height ~ year, data=mens)
# predictions for olympic years
predicted <- predict(fit_men, newdata=new)
pander(data.frame(new, predicted))
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
annotate(geom_point)
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
annotate(geom_point) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
annotate("text", x = 1980, y = c(1.5, 2.25), label=c("female", "male")) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("female", "male")) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("female", "male"), colours = c('#00BFC4', '#F8766D')) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("female", "male"), colour = c('#00BFC4', '#F8766D')) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, guide=FALSE)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, guide=FALSE)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("female", "male"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("female", "male"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw()
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none", ) +
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw()
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step + facet_grid(~gender)
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, laberl = gender)) +
ggtitle("High Jump World Record Progression by Gender") +
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, laberl = gender)) +
ggtitle("High Jump World Record Progression by Gender")
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender, label=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender, laberl = gender)) +
ggtitle("High Jump World Record Progression by Gender") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() +
geom_step(data=records, mapping=aes(x=year, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=year, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of women records
# (points colored by country)
women_by_country <- ggplot() + theme_bw() +
geom_step(data=subset(records, (gender=="female")),
mapping=aes(x=year, y=height)) +
geom_point(data=subset(records, (gender=="female")),
mapping=aes(x=year, y=height, colour=country)) +
ggtitle("Women's High Jump World Record Progression")
women_by_country
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=date, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=date, y=height, colour=gender)) +
annotate("text", x = 1980, y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=date, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=date, y=height, colour=gender)) +
annotate("text", x = "1980-01-01", y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=date, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=date, y=height, colour=gender)) +
annotate("text", x = as.date("1980-01-01"), y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (lines colored by gender)
# (the default ggplot color values are: '#00BFC4', '#F8766D')
step <- ggplot() + theme_bw() +
geom_step(data=records, mapping=aes(x=date, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=date, y=height, colour=gender)) +
annotate("text", x = as.Date("1980-01-01"), y = c(1.85, 2.25), label=c("women", "men"),
colour = c( '#F8766D','#00BFC4')) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none")
step
# step-line plot, with points, showing the progression of records
# (facetting by gender)
step <- ggplot() +
geom_step(data=records, mapping=aes(x=date, y=height, colour=gender)) +
geom_point(data=records, mapping=aes(x=date, y=height, colour=gender)) +
ggtitle("High Jump World Record Progression by Gender") +
theme(legend.position="none") +
facet_wrap(~ gender)
step
# step-line plot, with points, showing the progression of women records
# (points colored by country)
women_by_country <- ggplot() + theme_bw() +
geom_step(data=subset(records, (gender=="female")),
mapping=aes(x=date, y=height)) +
geom_point(data=subset(records, (gender=="female")),
mapping=aes(x=date, y=height, colour=country)) +
ggtitle("Women's High Jump World Record Progression")
women_by_country
# step-line plot, with points, showing the progression of men records
# (points colored by country)
men_by_country <- ggplot() + theme_bw() +
geom_step(data=subset(records, (gender=="male")),
mapping=aes(x=year, y=height)) +
geom_point(data=subset(records, (gender=="male")),
mapping=aes(x=year, y=height, colour=country)) +
ggtitle("Men's High Jump World Record Progression")
men_by_country
# step-line plot, with points, showing the progression of men records
# (points colored by country)
men_by_country <- ggplot() + theme_bw() +
geom_step(data=subset(records, (gender=="male")),
mapping=aes(x=date, y=height)) +
geom_point(data=subset(records, (gender=="male")),
mapping=aes(x=date, y=height, colour=country)) +
ggtitle("Men's High Jump World Record Progression")
men_by_country
women_by_country
# Model for women
# regression of 'height' on 'year'
womens_records <- records[records$gender == "female", ]
fit_women <- lm(height ~ year, data=womens_records)
fit_women
summary(fit_women)
pander(data.frame(new, predicted))
new <- data.frame(year = seq(2000, 2016, 4))
predicted <- predict(fit_women, newdata=new)
pander(data.frame(new, predicted))
View(records)
mens_records <- records[records$gender == "male", ]
fit_men <- lm(height ~ year, data=mens)
summary(fit_men)
predicted <- predict(fit_men, newdata=new)
pander(data.frame(new, predicted))
inches <- sapply(records$height, conversion)
inches
View(records)
data <- read.csv("data/Credit.csv", header=TRUE, row.names = 1)
getwd()
setwd("/Users/Abigail/stat159_fall2016_project2")
setwd("/Users/Abigail/stat159_fall2016_project2/")
getwd()
setwd("/Users/Abigail")
setwd("/Users/Abigail/stat159_fall2016_project2/")
setwd("/Users/Abigail/stat159_fall2016_project2")
getwd()
setwd("Users/Abigail")
setwd("/Users/Abigail/stat159-fall2016-project2")
data <- read.csv("data/Credit.csv", header=TRUE, row.names = 1)
library(pander)
library(ggplot2)
descr_stats <- function(col, name) {
names <- c("Minimum", "Maximum", "Range", "Median", "First Quartile","Third Quartile",
"Interquartile Range", "Mean", "Standard Deviation")
minimum = min(col)
maximum = max(col)
range = maximum- minimum
median = median(col)
first_q = quantile(col, 0.25)
third_q = quantile(col, 0.75)
IQR <- IQR(col)
mean <- mean(col)
sd <- sd(col)
vals <- c(minimum, maximum, range, median, first_q, third_q,
IQR, mean, sd)
sink(paste("data/Summary_", name, ".txt", sep=""))
pander(data.frame(names, vals))
dev.off()
path = paste("images/Histogram_", name, ".png", sep="")
png(filename = path)
hist(col, main = paste("Histogram for ", name))
dev.off()
path = paste("images/Boxplot_", name, ".png", sep="")
png(filename=path)
boxplot(col, main = paste("Boxplot for ", name))
dev.off()
}
for (i in 1:6) {
col <- data[, i]
name <- colnames(data)[i]
descr_stats(col, name)
}
i = 1
i
names <- c("Minimum", "Maximum", "Range", "Median", "First Quartile","Third Quartile",
"Interquartile Range", "Mean", "Standard Deviation")
minimum = min(col)
col
col <- data[, i]
name <- colnames(data)[i]
col
View(col)
dev.curr()
dev.cur
mean(c(1, 2, 3))
dev.off
i
i - 1
i
i = 1
i
